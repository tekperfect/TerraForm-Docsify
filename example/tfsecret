#!/bin/bash

# Default Vars
filePath="~/secrets/terraform.tfvars.asc"


function usage()
{
    echo "usage: tfsecret apply | destroy  [-fp | --file-path path_to_file]"
    exit 0
}

function check()
{
    # Check if required commands exist and file
    if ! test -f "${filePath}"; then
        echo "${filePath} dosen't exist or path is wrong"
        exit 1
    fi

    if ! [ ${filePath: -4} == ".asc" ]; then
        echo "${filePath} file isn't encrypted or does not have .asc gpg"
        exit 1
    fi

    if ! type "gpg" > /dev/null; then 
        echo "gpg doesn't exist, please install it into path"    
        exit 1
    fi
}


function removeSecrets()
{
    # Remove Terraform.tfvars
    echo "Deleting tfvars* in 5s"
    sleep 5s
    rm ./terraform.tfvars*
    echo "Finished Removing Secret"
}

function apply()
{
    echo $filePath
    check

    cp $filePath ./terraform.tfvars.asc
    gpg --decrypt --no-symkey-cache --output ./terraform.tfvars ./terraform.tfvars.asc

    echo "Starting Terraform"
    sleep 1s
    terraform plan -var-file=terraform.tfvars
    terraform apply -var-file=terraform.tfvars

    removeSecrets
    exit 0
}


function destory()
{
    while [ "$1" != "" ]; do
        case $1 in
            -fp | --file-path )     shift
                                    filePath="$1"                                    
                                    ;;
        esac
        shift
    done
    check

    cp $filePath ./terraform.tfvars.asc
    gpg --decrypt --no-symkey-cache --output ./terraform.tfvars ./terraform.tfvars.asc

    echo "Starting terraform destroy"
    sleep 1s
    terraform destroy -var-file=terraform.tfvars
    
    removeSecrets
    exit 0
}


# main flag
applyf=false
destroyf=false
while [ "$1" != "" ]; do
    case $1 in
        -fp | --file-path )     shift
                                filePath="$1"                                
                                ;;
        apply )                 shift
                                applyf=true
                                continue                                
                                ;;
        destroy )               shift
                                destroyf=true
                                continue
                                ;;
        help )                  shift
                                usage
                                ;;
    esac
    shift
done

if ! [ $applyf -a $destroyf ]; then
    echo "Must choose one option"
    exit 1
fi

if $applyf; then
    apply
elif $destoryf; then
    destory
fi

echo "You need to specify apply or destroy"
exit 1